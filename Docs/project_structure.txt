For our project:

/
	addons/
		addon/ #third-party resources, namely editor plugins
	docs/
		learning.html
	entities/
		player/
			player.tscn
			player.gd
		enemies/
			generic_enemy.gd
			enemy.tscn #base scene to be overridden
			boss_enemy.gd
			boss.tscn #base scene to be overridden
		actor.tscn
		actor.tres
		actor.gd
	globals/ #used as autoloads
		notifications.tscn
		lobby.tscn
		serialization.tscn
	menus/ #for scenes that are used standalone 2d menus, or popups
		title/
			title.tscn
			font_title.tres
	ui/ #for any assets related to UI that are reused
		theme_default/
			assets/
				[...] #generally pngs for interface
			theme_default.tres
		font_uidefault.tres
		cool_font.ttf
	levels/ #scenes where a player will probably be instantiated
		 common/
			 assets/
				 [...]
			 prefabs/ #premade designs for inclusion in a level elsewhere
				 [...].tscn
			 common_gridmap.tres
		 main/
			 assets/
				 [...]
			 main.tscn
			 [...]
		 overworld/
			 assets/
				 [...]
			 overworld.tscn
			 [...]
		 dungeon/
			 assets/
				 [...]
			 dungeon.tscn
			 [...]

From Godot Docs:
Godot is scene-based in nature, and uses the filesystem as-is,without metadata or an asset database.

Unlike other engines, many resources are contained within the scene itself, so the amount of files in the
filesystem is considerably lower.

Considering that, the most common approach is to group assets as close to scenes as possible; when a
project grows, it makes it more maintainable.

As an example, one can usually place into a single folder their basic assets, such as sprite images, 3D
model meshes, materials, and music, etc. They can then use a separate folder to store built levels that use
them.

/project.godot
/docs/.gdignore  !See "Ignoring specific folders" below
/docs/learning.html
/models/town/house/house.dae
/models/town/house/window.png
/models/town/house/door.png
/characters/player/cubio.dae
/characters/player/cubio.png
/characters/enemies/goblin/goblin.dae
/characters/enemies/goblin/goblin.png
/characters/npcs/suzanne/suzanne.dae
/characters/npcs/suzanne/suzanne.png
/levels/riverdale/riverdale.scn


From Reddit u/end-it:
/
	entities/
		player/
			player.tscn
			player.gd
		enemies/
			generic_enemy.gd
			enemy.tscn #base scene to be overridden
			boss_enemy.gd
			boss.tscn #base scene to be overridden
		actor.tscn
		actor.tres
		actor.gd
	globals/ #used as autoloads
		notifications.tscn
		lobby.tscn
		serialization.tscn
	menus/ #for scenes that are used standalone 2d menus, or popups
		title/
			title.tscn
			font_title.tres
	ui/ #for any assets related to UI that are reused
		theme_default/
			assets/
				[...] #generally pngs for interface
			theme_default.tres
		font_uidefault.tres
		cool_font.ttf
	scenes/ #scenes where a player will probably be instantiated
		 common/
			 assets/
				 [...]
			 prefabs/ #premade designs for inclusion in a level elsewhere
				 [...].tscn
			 common_gridmap.tres
		 main/
			 assets/
				 [...]
			 main.tscn
			 [...]
		 overworld/
			 assets/
				 [...]
			 overworld.tscn
			 [...]
		 dungeon/
			 assets/
				 [...]
			 dungeon.tscn
			 [...]
